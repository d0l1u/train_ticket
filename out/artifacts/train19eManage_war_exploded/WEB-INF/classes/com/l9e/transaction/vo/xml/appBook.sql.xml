<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="appBook">
	<!-- 查询预订订单列表 -->
	<select id="queryAppBookList" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap">
		SELECT app.order_id, cp.from_station from_city, cp.arrive_station to_city,
			app.bx_pay_money AS bx_pay_money,cp.train_no, 
			app.pay_money AS pay_money, app.channel,
			(cp.pay_money*COUNT(cp.cp_id)) AS ticket_pay_money,
			app.order_status,app.pay_type,
			DATE_FORMAT(app.pay_time, '%Y-%m-%d %H:%i:%s') AS pay_time,
			DATE_FORMAT(app.finish_time,'%Y-%m-%d %H:%i:%s') AS out_ticket_time, 		
			CONCAT(CONVERT(DATE_FORMAT(cp.travel_time,'%Y-%m-%d'),CHAR),' ',cp.from_time,':00') AS from_time,
			cp.out_ticket_billno,au.user_phone app_phone, app.opt_ren, 
			DATE_FORMAT(app.create_time,'%Y-%m-%d %H:%i:%s') AS create_time 
		FROM app_orderinfo AS app  
		LEFT JOIN app_orderinfo_cp cp ON cp.order_id=app.order_id 
		LEFT JOIN app_userinfo au ON au.user_id=app.user_id 
		WHERE 1 = 1
		<dynamic prepend="">
			<isNotEmpty prepend=" and " property="order_id">
				app.order_id=#order_id:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend=" and " property="user_phone">
				au.user_phone=#user_phone:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend=" and " property="out_ticket_billno">
				cp.out_ticket_billno=#out_ticket_billno:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend=" and " property="begin_info_time">
				app.create_time
				<![CDATA[>=]]>
				#begin_info_time:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend=" and " property="end_info_time">
				app.create_time
				<![CDATA[<]]>
				DATE_ADD(#end_info_time:VARCHAR#,INTERVAL 1 DAY)
			</isNotEmpty>
			<isNotEmpty prepend=" and " property="order_status">
				app.order_status in
				<iterate open="(" close=")" conjunction=","
					property="order_status">
					#order_status[]:VARCHAR#
				</iterate>
			</isNotEmpty>
			<isNotEmpty prepend=" and " property="pay_type">
				app.pay_type in
				<iterate open="(" close=")" conjunction=","
					property="pay_type">
					#pay_type[]:VARCHAR#
				</iterate>
			</isNotEmpty>
			<isNotEmpty prepend=" and " property="channel">
				app.channel in
				<iterate open="(" close=")" conjunction=","
					property="channel">
					#channel[]:VARCHAR#
				</iterate>
			</isNotEmpty>
		</dynamic>
		GROUP BY app.order_id 
		ORDER BY app.create_time DESC LIMIT #everyPagefrom:Integer#,
		#pageSize:Integer#
	</select>


	<!-- 查询预订订单信息 -->
	<select id="queryAppBookOrderInfo" parameterClass="java.lang.String"
		resultClass="java.util.HashMap">
		SELECT app.order_id,app.order_status,app.user_id,app.channel,
			DATE_FORMAT(app.pay_time,'%Y-%m-%d %H:%i:%s') AS pay_time,cp.out_ticket_billno,
			DATE_FORMAT(app.finish_time,'%Y-%m-%d %H:%i:%s') AS out_ticket_time, NULL AS fund_type,
			cp.from_station from_city,cp.arrive_station to_city,
			cp.from_time,app.channel,
			cp.arrive_time AS to_time,
			cp.travel_time, CONVERT(cp.pay_money*COUNT(cp.cp_id), CHAR) AS ticket_pay_money,
			CONVERT(app.bx_pay_money,CHAR) AS bx_pay_money,
			app.pay_money, cp.train_no, cp.seat_type, 
			app.buy_money,IFNULL(app.refund_deadline_ignore,0)AS refund_deadline_ignore, app.refund_total,
			au.user_phone app_phone 
		FROM app_orderinfo AS app 
		LEFT JOIN app_orderinfo_cp cp ON app.order_id = cp.order_id
		LEFT JOIN app_userinfo au ON au.user_id=app.user_id 
		WHERE app.order_id=#order_id:VARCHAR#
		GROUP BY app.order_id 
	</select>

	<!-- 查询预订订单条数 -->
	<select id="queryAppBookListCount" parameterClass="java.util.HashMap"
		resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM (SELECT app.order_id, cp.from_station from_city, cp.arrive_station to_city,
			CONVERT(app.bx_pay_money, CHAR) AS bx_pay_money,cp.train_no, 
			CONVERT(app.pay_money, CHAR) AS pay_money, app.order_status,
			DATE_FORMAT(app.pay_time, '%Y-%m-%d %H:%i:%s') AS pay_time,
			DATE_FORMAT(app.finish_time,'%Y-%m-%d %H:%i:%s') AS out_ticket_time, 		
			CONCAT(CONVERT(DATE_FORMAT(cp.travel_time,'%Y-%m-%d'),CHAR),' ',cp.from_time,':00') AS from_time,
			cp.out_ticket_billno,au.user_phone app_phone, app.opt_ren, 
			DATE_FORMAT(app.create_time,'%Y-%m-%d %H:%i:%s') AS create_time 
		FROM app_orderinfo AS app  
		LEFT JOIN app_orderinfo_cp cp ON cp.order_id=app.order_id 
		LEFT JOIN app_userinfo au ON au.user_id=app.user_id 
		WHERE 1 = 1
		<dynamic prepend="">
			<isNotEmpty prepend=" and " property="order_id">
				app.order_id=#order_id:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend=" and " property="user_phone">
				au.user_phone=#user_phone:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend=" and " property="out_ticket_billno">
				cp.out_ticket_billno=#out_ticket_billno:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend=" and " property="begin_info_time">
				app.create_time
				<![CDATA[>=]]>
				#begin_info_time:VARCHAR#
			</isNotEmpty>
			<isNotEmpty prepend=" and " property="end_info_time">
				app.create_time
				<![CDATA[<]]>
				DATE_ADD(#end_info_time:VARCHAR#,INTERVAL 1 DAY)
			</isNotEmpty>
			<isNotEmpty prepend=" and " property="order_status">
				app.order_status in
				<iterate open="(" close=")" conjunction=","
					property="order_status">
					#order_status[]:VARCHAR#
				</iterate>
			</isNotEmpty>
			<isNotEmpty prepend=" and " property="pay_type">
				app.pay_type in
				<iterate open="(" close=")" conjunction=","
					property="pay_type">
					#pay_type[]:VARCHAR#
				</iterate>
			</isNotEmpty>
			<isNotEmpty prepend=" and " property="channel">
				app.channel in
				<iterate open="(" close=")" conjunction=","
					property="channel">
					#channel[]:VARCHAR#
				</iterate>
			</isNotEmpty>
		</dynamic>
		GROUP BY app.order_id 
		ORDER BY app.create_time DESC ) as temp
	</select>

	<!-- 更新操作人 -->
	<update id="updateAppEndOpt_Ren"
		parameterClass="java.util.HashMap">
		UPDATE app_orderinfo
		<dynamic prepend="SET">
			<isNotEmpty prepend="," property="opt_ren">
				opt_ren=#opt_ren#
			</isNotEmpty>
		</dynamic>
		WHERE order_id = #order_id#
	</update>

	<!-- 查询预订订单-车票 -->
	<select id="queryAppBookOrderInfoCp"
		parameterClass="java.lang.String" resultClass="java.util.HashMap">
		SELECT 
		  cp.cp_id, cp.order_id, cp.user_name, cp.train_box, cp.seat_no, cp.ticket_type, cp.ids_type, cp.user_ids,
		  cp.telephone, cp.create_time, cp.pay_money, cp.buy_money, cp.modify_time, cp.seat_type, (hp.NAME) AS name_type,
		  bx.bx_code,bx.bx_id 
		FROM
		  app_orderinfo_cp cp 
		  LEFT JOIN cp_orderinfo_bx bx ON cp.cp_id = bx.cp_id 
		  LEFT JOIN hc_productinfo hp ON bx.product_id = hp.product_id  
		WHERE cp.order_id=#order_id:VARCHAR#
	</select>

	<!-- 查询预订订单-保险 -->
	<select id="queryAppBookOrderInfoBx"
		parameterClass="java.lang.String" resultClass="java.util.HashMap">
		SELECT bx.bx_id,bx.order_id,bx.from_name,
		bx.to_name,bx.ids_type,bx.user_name,
		bx.user_ids,bx.create_time,bx.modify_time,
		bx.telephone,bx.bx_status,bx.bx_code,
		bx.bx_billno,bx.pay_money,bx.buy_money FROM cp_orderinfo_bx bx
		WHERE bx.order_id=#order_id:VARCHAR#
	</select>

	<!-- 查询预订订单-历史记录 -->
	<select id="queryAppHistroyByOrderId"
		parameterClass="java.lang.String" resultClass="java.util.HashMap">
		SELECT hs.history_id, hs.order_optlog,
		DATE_FORMAT(hs.create_time,'%Y-%m-%d %H:%i:%s') AS create_time,
		hs.opter FROM app_orderinfo_history hs 
		WHERE hs.order_id=#order_id:VARCHAR# order by hs.create_time asc
	</select>

	<!-- 查询退款明细 -->
	<select id="queryAppOutTicketInfo" parameterClass="java.lang.String"
		resultClass="java.util.HashMap">
		SELECT
		hm.order_id,hm.refund_money,DATE_FORMAT(hm.create_time,'%Y-%m-%d
		%H:%i:%s')AS create_time,
		hm.refund_time,hm.user_remark,hm.our_remark,
		hm.refund_plan_time, hm.refund_status,
		hm.opt_person,hm.refund_type FROM app_orderinfo_refundstream hm where hm.order_id=#order_id:VARCHAR#
	</select>
	
	<!-- 切换无视截止时间 -->
	<update id="updateAppSwitch_ignore" parameterClass="java.util.HashMap">
		UPDATE app_orderinfo SET refund_deadline_ignore=#refund_deadline_ignore#,opt_ren=#opt_ren# WHERE order_id=#order_id#
	</update>
	
	<!-- 增加操作日志 -->
	<insert id="addAppUserAccount" parameterClass="java.util.HashMap">
		INSERT INTO app_orderinfo_history (order_id,order_optlog,create_time,opter)
		VALUES(#order_id#,#userAccount#,NOW(),#user#)
	</insert>
</sqlMap>