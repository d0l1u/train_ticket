<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="accountStatistics">

	<typeAlias alias="accountStatistics" type="com.l9e.transaction.vo.AccountStatistics" />

	<resultMap id="resultAccountStatistics" class="com.l9e.transaction.vo.AccountStatistics">
		<result property="strStatisticsDate" column="str_statistics_date" />
		<result property="addAccount" column="add_account" />
		<result property="whiteList" column="white_list" />
		<result property="surplusPassenger" column="surplus_passenger" />
		<result property="ticketSum" column="ticket_sum" />
		<result property="whiteListRate" column="white_list_rate" />
		<result property="addWhiteList" column="add_white_list" />
		<result property="upperLimit" column="upper_limit" />
		<result property="userInfo" column="user_info" />
		<result property="phoneVerifi" column="phone_verifi" />
		<result property="otherSum" column="other_sum" />
		<result property="x1Rate" column="x1_rate" />
		<result property="x2Rate" column="x2_rate" />
		<result property="x3Rate" column="x3_rate" />
		<result property="x4Rate" column="x4_rate" />
		<result property="x5Rate" column="x5_rate" />
	</resultMap>


	<select id="queryAccountStatisticsTotal" parameterClass="accountStatistics" resultClass="java.lang.Integer">
		select 
			count(1)
		from account_statistics 
		<dynamic prepend="WHERE">
			<isParameterPresent>
				<isNull property="queryType" >
					statistics_date = DATE(now())
				</isNull>
				<isNotNull property="queryType">
					<isEqual property="queryType" compareValue="1" >
						<isNull property="beginInfoTime">
							<isNull property="endInfoTime">
								statistics_date = DATE(now())
							</isNull>
						</isNull>
						<isNotNull prepend="and" property="beginInfoTime">
							statistics_date <![CDATA[>=]]> #beginInfoTime:DATE#
						</isNotNull>
						<isNotNull prepend="and" property="endInfoTime">
							statistics_date <![CDATA[<=]]> #endInfoTime:DATE#
						</isNotNull> 
					</isEqual>
				
					<isEqual prepend="and" property="queryType" compareValue="2">
						yearweek(date_format(statistics_date,'%Y-%m-%D')) = yearweek(now())-1
					</isEqual>
					<isEqual prepend="and" property="queryType" compareValue="3">
						date_format(statistics_date,'%Y-%m') = date_format(date_sub(curdate(), interval 1 month),'%Y-%m')
					</isEqual>
				</isNotNull>
			</isParameterPresent>
		</dynamic>
	</select>

	<select id="queryAccountStatistics" parameterClass="accountStatistics" resultMap="resultAccountStatistics">
		select 
			<isEqual property="queryType" compareValue="1">
				date_format(statistics_date,'%Y-%m-%d') as str_statistics_date,
				add_account,
				white_list,
				surplus_passenger,
				ticket_sum,
				white_list_rate,
				add_white_list,
				upper_limit,
				user_info,
				phone_verifi,
				other_sum,
				x1_rate,
				x2_rate,
				x3_rate,
				x4_rate,
				x5_rate
			</isEqual>
			<isNotEqual property="queryType" compareValue="1">
				<isEqual  property="queryType" compareValue="2">
					concat_ws(
						'/',
						date_format(
							case
							when dayname(date(statistics_date)) = 'Sunday' then
								date_sub(
									date(statistics_date),
									interval 6 day
								)
							else
								date_add(
									statistics_date,
									interval - dayofweek(date(statistics_date)) + 2 day
								)
							end,
							'%Y-%m-%d'
						),
						date_format(
							case
							when dayname(date(statistics_date)) = 'Sunday' then
								date(statistics_date)
							else
								date_add(
									statistics_date,
									interval 7 - dayofweek(statistics_date) + 1 day
								)
							end,
							'%Y-%m-%d'
						)
					) as str_statistics_date,
				</isEqual>
				<isEqual property="queryType" compareValue="3">
					date_format(statistics_date,'%Y-%m') as str_statistics_date,
				</isEqual>
				
				sum(add_account) as add_account,
				sum(white_list) as white_list,
				sum(surplus_passenger) as surplus_passenger,
				sum(ticket_sum) as ticket_sum,
				sum(white_list_rate) as white_list_rate,
				sum(add_white_list) as add_white_list,
				sum(upper_limit) as upper_limit,
				sum(user_info) as user_info,
				sum(phone_verifi) as phone_verifi,
				sum(other_sum) as other_sum,
				sum(x1_rate) as x1_rate,
				sum(x2_rate) as x2_rate,
				sum(x3_rate) as x3_rate,
				sum(x4_rate) as x4_rate,
				sum(x5_rate) as x5_rate
			</isNotEqual>
		from 
			account_statistics
		<dynamic prepend="WHERE">
		<isParameterPresent>
			<isNull property="queryType" >
				statistics_date = now()
			</isNull>
			<isNotNull property="queryType">
				<isEqual property="queryType" compareValue="1" >
					<isNull property="beginInfoTime">
						<isNull property="endInfoTime">
							statistics_date = now()
						</isNull>
					</isNull>
					
					<isNotNull prepend="and" property="beginInfoTime">
						statistics_date <![CDATA[>=]]> #beginInfoTime:DATE#
					</isNotNull>
					<isNotNull prepend="and" property="endInfoTime">
						statistics_date <![CDATA[<=]]> #endInfoTime:DATE#
					</isNotNull> 
				</isEqual>
			
				<isEqual property="queryType" compareValue="2">
					yearweek(date_format(statistics_date,'%Y-%m-%d')) = yearweek(now())-1
					
				</isEqual>
				<isEqual property="queryType" compareValue="3">
					date_format(statistics_date,'%Y-%m') = date_format(date_sub(curdate(), interval 1 month),'%Y-%m')
				</isEqual>
			</isNotNull>
		</isParameterPresent>
		</dynamic>
	</select>

	<select id="queryAccountTotals" resultClass="java.util.HashMap">
		select
			t1.sumTotal as sumTotal,
			t2.freeTotal as freeTotal,
			t1.sumTotal - t2.freeTotal as stopTotal
		from
			(
				(
					select
						count(1) as sumTotal
					from
						cp_accountinfo ca1
					where
						ca1.channel = '19e'
				) as t1,
				(
					select
						count(1) as freeTotal
					from
						cp_accountinfo ca2
					where
						ca2.channel = '19e'
					and (
						ca2.acc_status = '00'
						or ca2.acc_status = '01'
						or ca2.acc_status = '33'
						or ca2.acc_status = '66'
					)
				) as t2
			)
	</select>
	
	
	<select id="queryNewaddAccountTotal" parameterClass="java.util.Date" resultClass="java.lang.Integer">
		select 
			count(1) 
		from cp_accountinfo 
		where channel = '19e' 
			and DATE(create_time) = #date:DATE#
	</select>
	
	<select id="queryWhiteListTotal" resultClass="java.lang.Integer">
		select count(1) from cp_pass_whitelist;
	</select>
	
	
	<select id="querySurplusPassengerTotal" resultClass="java.lang.Integer">
		SELECT
			count(1) * 15 - sum(contact_num) 
		FROM
			cp_accountinfo
		WHERE
			channel = '19e'
		AND 16 > contact_num
		AND (acc_status = '33')
	</select>
	
	<select id="queryTicketTotal" parameterClass="java.util.Date" resultClass="java.lang.Integer">
		select 
			count(1) 
		from cp_orderinfo_cp cc 
		where  ticket_type <![CDATA[<>]]> 1 
			and  DATE(create_time) = #date:DATE#
	</select>
	
	
	<select id="queryMatchWhiteListTotal" parameterClass="java.util.Date" resultClass="java.lang.Integer">
		select 
			count(1) 
		from cp_orderinfo_cp cc 
		where  
			ticket_type <![CDATA[<>]]> 1 
			and is_white_list = 2 
			and DATE(create_time) = #date:DATE#
	</select>
	<select id="queryAddWhiteListTotal" parameterClass="java.util.Date" resultClass="java.lang.Integer">
		select count(1) from cp_pass_whitelist where DATE(create_time) = #date:DATE#
	</select>
	
	
	<select id="queryAccountStopTotal" parameterClass="java.util.Date" resultClass="java.lang.Integer">
		SELECT count(1) 
		FROM cp_accountinfo 
		WHERE channel = '19e'  
			AND acc_status <![CDATA[<>]]> '00'
			AND acc_status <![CDATA[<>]]> '01'
			AND acc_status <![CDATA[<>]]> '33'
			AND acc_status <![CDATA[<>]]> '66'
			AND date(stop_time) = #date:DATE#
	</select>
	
	
	<select id="queryAccountOfUpperlimit" parameterClass="java.util.Date" resultClass="java.lang.Integer">
		SELECT count(1) 
		FROM cp_accountinfo 
		WHERE channel = '19e'     
		AND acc_status = '22'    
		AND stop_reason = 3     
		AND DATE(stop_time) = #date:DATE#
	</select>
	
	<select id="queryAccountOfCheckUser" parameterClass="java.util.Date" resultClass="java.lang.Integer">
		SELECT count(1) 
		FROM cp_accountinfo 
		WHERE channel = '19e'     
		AND (acc_status = '55' OR stop_reason = '1' OR stop_reason = '4' OR acc_status = '7')    
		AND  DATE(stop_time) =  #date:DATE#
	</select> 
	
	<select id="queryAccountOfCheckPhone" parameterClass="java.util.Date" resultClass="java.lang.Integer">
		SELECT count(1) 
		FROM cp_accountinfo 
		WHERE channel = '19e'     
		AND(acc_status = '77' OR acc_status = '78' OR acc_status = '79')  
		AND DATE(stop_time) = #date:DATE#
	</select>
	
	<select id="queryTicketX" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT
			count(1)
		FROM
			(
				SELECT
					1
				FROM
					cp_orderinfo_cp
				WHERE
					DATE(create_time) = #date:DATE#
				GROUP BY
					cert_no
				HAVING
					count(1) = #x:INTEGER#
			) AS tt
	</select>
	
	<insert id="insertStatistics" parameterClass="accountStatistics">
		INSERT INTO account_statistics 
		(
			statistics_date,
			add_account,
			white_list,
			surplus_passenger,
			ticket_sum,
			white_list_rate,
			add_white_list,
			upper_limit,
			user_info,
			phone_verifi,
			other_sum,
			x1_rate,
			x2_rate,
			x3_rate,
			x4_rate,
			x5_rate
		) 
		VALUES
		(
			#statisticsDate:DATE#,
			#addAccount:INTEGER#,
			#whiteList:INTEGER#,
			#surplusPassenger:INTEGER#,
			#ticketSum:INTEGER#,
			#whiteListRate:DOUBLE#,
			#addWhiteList:INTEGER#,
			#upperLimit:INTEGER#,
			#userInfo:INTEGER#,
			#phoneVerifi:INTEGER#,
			#otherSum:INTEGER#,
			#x1Rate:DOUBLE#,
			#x2Rate:DOUBLE#,
			#x3Rate:DOUBLE#,
			#x4Rate:DOUBLE#,
			#x5Rate:DOUBLE#
		)
	</insert>

</sqlMap>